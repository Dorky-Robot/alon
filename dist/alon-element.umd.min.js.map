{"version":3,"file":"alon-element.umd.min.js","sources":["../src/alon.js","../node_modules/tanaw/dist/tanaw.bundle.js","../node_modules/habiscript/src/index.js","../src/alon-element.js"],"sourcesContent":["const ALON_EVENT = '__AlonEvent__';\n\nexport function signalDown(element, payload) {\n  const event = new CustomEvent(ALON_EVENT, {\n    detail: { ...payload, __alonSignalDown__: true },\n    bubbles: true,\n    cancelable: true,\n    composed: true\n  });\n\n  findLeafElements(element).forEach((leafElement) => {\n    leafElement.dispatchEvent(event);\n  });\n}\n\nexport function signalUp(element, payload) {\n  element.dispatchEvent(new CustomEvent(ALON_EVENT, {\n    detail: { ...payload, __alonSignalUp__: true },\n    bubbles: true,\n    cancelable: true,\n    composed: true\n  }));\n}\n\nexport function gapUp(element, matcher, transformer) {\n  bubbling(element, matcher, function (payload, event) {\n    signalUp(\n      element,\n      transformer ? transformer(payload) : payload,\n    );\n  });\n}\n\nexport function gapDown(element, matcher, transformer) {\n  capture(element, matcher, function (payload) {\n    signalUp(\n      element,\n      transformer ? transformer(payload) : payload);\n  });\n}\n\nfunction _genericEventHandler(e, handlerMap) {\n  e.stopPropagation();\n\n  for (const [resolver, handlers] of handlerMap.entries()) {\n    const result = resolver(e.detail);\n    if (result !== undefined) {\n      handlers.forEach((handler) => handler(result, e));\n    }\n  }\n}\n\nexport function capture(element, resolver, handler) {\n  if (!element.alonCaptureHandlers) {\n    element.alonCaptureHandlers = new Map();\n\n    element.addEventListener(ALON_EVENT, (e) => {\n      if (e.detail.__alonSignalUp__) return;\n      _genericEventHandler(e, element.alonCaptureHandlers);\n    }, true);\n  }\n\n  const handlers = element.alonCaptureHandlers.get(resolver) || [];\n  handlers.push(handler);\n  element.alonCaptureHandlers.set(resolver, handlers);\n}\n\nexport function bubbling(element, resolver, handler) {\n  if (!element.alonBubblingHandlers) {\n    element.alonBubblingHandlers = new Map();\n\n    element.addEventListener(ALON_EVENT, (e) => {\n      if (e.detail.__alonSignalDown__) return;\n      _genericEventHandler(e, element.alonBubblingHandlers);\n    });\n  }\n\n  const handlers = element.alonBubblingHandlers.get(resolver) || [];\n  handlers.push(handler);\n  element.alonBubblingHandlers.set(resolver, handlers);\n}\n\nexport function intercept(host, targetElement, eventType, callback) {\n  targetElement.addEventListener(eventType, (event) => {\n    if (event.preventDefault) event.preventDefault();\n    callback(event);\n  });\n}\n\nfunction findLeafElements(element) {\n  let leafElements = [];\n\n  function walkThrough(element) {\n    let children = element.childNodes;\n    if (children.length === 0) {\n      if (element instanceof HTMLElement) {\n        leafElements.push(element);\n      }\n    } else {\n      children.forEach((child) => {\n        walkThrough(child);\n      });\n    }\n  }\n\n  walkThrough(element);\n  return leafElements;\n}","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? module.exports = factory() :\n\ttypeof define === 'function' && define.amd ? define(factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, global.Tanaw = factory());\n})(this, (function () { 'use strict';\n\n\tfunction getDefaultExportFromCjs (x) {\n\t\treturn x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;\n\t}\n\n\tfunction style(stylesObject) {\n\t  if (isEmpty(stylesObject)) return stylesObject;\n\t  return compileStyles(processStyles({ stylesObject }));\n\t}\n\n\tconst NO_SELECTOR = '__*__';\n\n\tfunction processStyles({ stylesObject, parentSelector = '', cssObject = {}, nestedSelector = '' }) {\n\t  if (Array.isArray(stylesObject)) {\n\t    const [property, value] = stylesObject;\n\t    const cssProperty = `${camelToKebabCase(property)}:${value};`;\n\t    const targetObject = nestedSelector ? (cssObject[nestedSelector] = cssObject[nestedSelector] || {}) : cssObject;\n\t    const key = camelToKebabCase(parentSelector || NO_SELECTOR);\n\n\t    targetObject[key] = (targetObject[key] || '') + cssProperty;\n\t  } else {\n\t    Object.keys(stylesObject).forEach(key => {\n\t      const value = stylesObject[key];\n\t      if (key.startsWith('@')) {\n\t        // Inline handling for media queries and nested selectors\n\t        processStyles({\n\t          stylesObject: value,\n\t          cssObject: cssObject,\n\t          nestedSelector: key\n\t        });\n\t      } else if (typeof value !== 'object') {\n\t        // Inline handling for direct property-value pairs\n\t        const cssProperty = `${camelToKebabCase(key)}:${value};`;\n\t        const targetObject = nestedSelector ? (cssObject[nestedSelector] = cssObject[nestedSelector] || {}) : cssObject;\n\t        const combinedKey = camelToKebabCase(parentSelector || NO_SELECTOR);\n\t        targetObject[combinedKey] = (targetObject[combinedKey] || '') + cssProperty;\n\t      } else {\n\t        // Inline handling for nested selectors\n\t        const combinedSelector = combineSelectors(parentSelector, key);\n\t        processStyles({\n\t          stylesObject: value,\n\t          parentSelector: combinedSelector,\n\t          cssObject: cssObject,\n\t          nestedSelector\n\t        });\n\t      }\n\t    });\n\t  }\n\n\t  return cssObject;\n\t}\n\n\tfunction combineSelectors(parent, child) {\n\t  if (!parent) return child;\n\t  const parentSelectors = splitAndTrim(parent);\n\t  const childSelectors = splitAndTrim(child);\n\n\t  const combined = parentSelectors.map(p =>\n\t    childSelectors.map(c => `${p}${c.startsWith(':') ? '' : ' '}${c}`).join(',')\n\t  ).join(',');\n\n\t  return combined;\n\t}\n\n\tfunction camelToKebabCase(str) {\n\t  return str.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n\t}\n\n\tfunction splitAndTrim(str) {\n\t  return str.split(',').map(s => s.trim());\n\t}\n\n\tfunction compileStyles(cssObject) {\n\t  if (typeof cssObject !== 'object' || Array.isArray(cssObject) || isEmpty(cssObject)) {\n\t    return cssObject;\n\t  }\n\n\t  return Object.entries(cssObject).map(([key, value]) =>\n\t    key === NO_SELECTOR ? compileStyles(value) : `${key}{${compileStyles(value)}}`\n\t  ).join('');\n\t}\n\n\tfunction isEmpty(obj) {\n\t  return !obj || Object.keys(obj).length === 0;\n\t}\n\n\tvar tanaw = {\n\t  style\n\t};\n\n\tvar tanaw$1 = /*@__PURE__*/getDefaultExportFromCjs(tanaw);\n\n\treturn tanaw$1;\n\n}));\n","const { style: tanawStyle } = require(\"tanaw\");\n\nconst classRegex = /\\.[^.#]+/g;\nconst idRegex = /#[^.#]+/;\n\n/**\n * PRIVATE FUNCTION: Creates an HTML element with specified attributes and children.\n *\n * This function is intended for internal use within the module/library it is defined in.\n * It simplifies the process of creating DOM elements in JavaScript, allowing for \n * a more declarative approach to building complex HTML structures without the verbosity\n * of traditional DOM manipulation methods.\n *\n * @param {string} tag - The type of element to create (e.g., 'div', 'span').\n * @param {Object} attrs - An object representing attributes to set on the element. \n *                         Special handling for:\n *                         - style: Accepts an object with CSS properties and values.\n *                         - event listeners: Properties starting with 'on' (e.g., 'onClick')\n *                           are treated as event listeners. The property name should be \n *                           the event's name in camelCase.\n * @param {Array} children - An array of elements or strings to append as children. \n *                           Can handle:\n *                           - Strings: will be converted to text nodes.\n *                           - Node objects: will be appended directly.\n *                           - Arrays: assumed to be in a specific format and converted accordingly.\n *\n * @returns {Node} The newly created element.\n *\n * NOTE: This function is not exposed publicly and should only be used within the context\n * of its defining module/library.\n *\n * Sample Usage (internal):\n * ```javascript\n * const card = makeElement('div', { class: 'card', style: { width: '300px', boxShadow: '0 2px 4px rgba(0,0,0,.1)' } }, [\n *   makeElement('img', { src: 'image.jpg', alt: 'Sample Image', style: { width: '100%', display: 'block' } }),\n *   makeElement('div', { class: 'card-body' }, [\n *     makeElement('h5', { class: 'card-title' }, ['Card Title']),\n *     makeElement('p', { class: 'card-text' }, ['Some quick example text to build on the card title and make up the bulk of the card\\'s content.']),\n *     makeElement('a', { href: '#', class: 'btn btn-primary' }, ['Go somewhere'])\n *   ])\n * ]);\n *\n * document.body.appendChild(card);\n * ```\n *\n * This example is for illustrative purposes only to demonstrate how `makeElement`\n * might be used internally.\n */\nfunction makeElement(tag, attrs = {}, children) {\n  const element = document.createElement(tag);\n\n  for (const [attr, value] of Object.entries(attrs)) {\n    if (attr === \"style\" && typeof value === \"object\") {\n      Object.assign(element.style, value)\n    } else if (typeof value === \"function\" && attr.startsWith(\"on\")) {\n      const event = attr.substring(2).toLowerCase();\n      element.addEventListener(event, value);\n    } else if (value !== undefined) {\n      element.setAttribute(attr, value);\n    }\n  }\n\n  // Append children\n  for (const child of children) {\n    if (typeof child === \"string\") {\n      element.appendChild(document.createTextNode(child));\n    } else if (child instanceof Node) {\n      element.appendChild(child);\n    } else if (Array.isArray(child)) {\n      element.appendChild(habiToHtml(child));\n    }\n  }\n\n  return element;\n}\n\n/**\n * Converts a CSS string to an object containing key-value pairs of CSS styles.\n * @param {string} cssString - The CSS string to be converted.\n * @returns {Object} - An object containing key-value pairs of CSS styles.\n */\nfunction cssStringToObject(cssString) {\n  let styleObject = {};\n\n  cssString.split(';').forEach(style => {\n    let [key, value] = style.split(':');\n    if (key && value) {\n      key = key.trim();\n      // Convert key to camelCase\n      key = key.replace(/-./g, match => match.charAt(1).toUpperCase());\n\n      styleObject[key] = value.trim();\n    }\n  });\n\n  return styleObject;\n}\n\nfunction habiToHtml(habi) {\n  if (typeof habi === \"string\") {\n    return document.createTextNode(habi);\n  } else if (habi instanceof Node) {\n    return habi;\n  }\n\n  const [first, ...rest] = habi;\n  let tag, attrs = {};\n\n  if (typeof first === \"string\") {\n    tag = first.split(/[#.]/)[0];\n    const classMatch = first.match(classRegex);\n    const idMatch = first.match(idRegex);\n\n    if (classMatch) {\n      attrs.class = classMatch.map((c) => c.substring(1)).join(\" \");\n    }\n\n    if (idMatch) {\n      attrs.id = idMatch[0].substring(1);\n    }\n  } else {\n    throw new Error(\"The first element of the habiscript array must be a string.\");\n  }\n\n  if (rest.length > 0 && typeof rest[0] === \"object\" && !Array.isArray(rest[0])) {\n    Object.assign(attrs, rest.shift());\n  }\n\n  const children = rest.flatMap((child) =>\n    Array.isArray(child) ? habiToHtml(child) : child\n  );\n\n  return makeElement(tag, attrs, children);\n}\n\n/**\n * Alias for `habiToHtml`.\n * @alias habiToHtml\n */\nfunction toElement(habi) {\n  return habiToHtml(habi);\n}\n\n/**\n * Converts an HTML element or HTML string to a habiscript format.\n *\n * This function is designed to facilitate the conversion of HTML structures into a more\n * concise and easy-to-manage format, habiscript, which represents the HTML as a nested array structure.\n * It's particularly useful for situations where you need to serialize HTML elements for \n * storage, transmission, or processing in a format that's easier to handle than a string of HTML.\n *\n * @param {Node|string} element - The HTML element (Node) or HTML string to be converted.\n *                                If a string is provided, it's first parsed into an HTML element.\n *\n * @returns {Array} The Habiscript representation of the provided HTML. This format is an array where:\n *                  - The first element is a string representing the tag, optionally including\n *                    its id and classes (e.g., 'div#id.class1.class2').\n *                  - The second element, if present, is an object representing the element's\n *                    attributes (excluding class and id, which are handled in the tag string).\n *                  - Subsequent elements represent child nodes, each converted to habiscript format.\n *\n * Sample Usage:\n * ```javascript\n * // HTML element example\n * const div = document.makeElement('div');\n * div.id = 'example';\n * div.className = 'container';\n * div.innerHTML = '<span>Hello world</span>';\n * const habiscript = htmlToHabi(div);\n * console.log(habiscript); // Outputs: ['div#example.container', {}, ['span', {}, 'Hello world']]\n *\n * // HTML string example\n * const habiFromString = htmlToHabi('<div id=\"example\" class=\"container\"><span>Hello world</span></div>');\n * console.log(habiFromString); // Same output as above\n * ```\n *\n * In these examples, `htmlToHabi` is used to convert an HTML element and an HTML string\n * into the Habiscript format. This format provides a more structured and readable way to represent\n * HTML content, especially when dealing with complex or deeply nested structures.\n */\nfunction htmlToHabi(element) {\n  if (typeof element === \"string\") {\n    const parser = new DOMParser();\n    const doc = parser.parseFromString(element, \"text/html\");\n    return htmlToHabi(doc.body.firstChild);\n  }\n\n  if (element.nodeType === Node.TEXT_NODE) {\n    return element.textContent;\n  }\n\n  let tag = element.tagName.toLowerCase();\n  if (element.id) {\n    tag += `#${element.id}`;\n  }\n  if (element.className) {\n    tag += `.${element.className.split(\" \").join(\".\")}`;\n  }\n\n  const habi = [tag];\n  const attributes = {};\n  for (const attr of element.attributes) {\n    if (attr.name !== \"class\" && attr.name !== \"id\") {\n      if (attr.name === \"style\") {\n        attributes.style = cssStringToObject(attr.value);\n      } else {\n        attributes[attr.name] = attr.value;\n      }\n    }\n  }\n\n  if (Object.keys(attributes).length > 0) {\n    habi.push(attributes);\n  }\n\n  for (const child of element.childNodes) {\n    habi.push(htmlToHabi(child));\n  }\n\n  return habi;\n}\n\nfunction style(tanawJS) {\n  return this.toElement([\n    'style',\n    tanawStyle(tanawJS)\n  ]);\n}\n\nmodule.exports = {\n  habiToHtml,\n  htmlToHabi,\n  toElement,\n  style\n};\n","import { signalDown, signalUp, capture, bubbling, intercept } from './alon.js';\nimport { toElement, htmlToHabi, style } from 'habiscript';\n\nexport default class AlonElement extends HTMLElement {\n  static _components = new Map();\n\n  static get components() {\n    return Object.fromEntries(this._components);\n  }\n\n  static selectorToHabi(selector) {\n    return toHabi($(selector)[0]);\n  }\n\n  static toElement(habi) {\n    return toElement(habi);\n  }\n\n  static toHabi(element) {\n    return htmlToHabi(element);\n  }\n\n  constructor() {\n    super();\n    this.shadow = this.attachShadow({ mode: 'open' });\n  }\n\n  static register(webComponent) {\n    const name = this.toKebabCase(webComponent.name);\n    this._components.set(name, webComponent);\n    customElements.define(name, webComponent);\n  }\n\n  static toKebabCase(className) {\n    return className.replace(/([a-z0-9])([A-Z])/g, '$1-$2').toLowerCase();\n  }\n\n  isAlon() { return true; }\n\n  intercept(targetElement, eventType, callback) {\n    intercept(this, targetElement, eventType, (e) => {\n      callback(e);\n    });\n  }\n\n  signalUp(payload) {\n    signalUp(this, payload);\n  }\n\n  signalDown(payload) {\n    debugger\n    signalDown(this, payload);\n  }\n\n  bubbling(resolver, handler) {\n    bubbling(this, resolver, handler);\n  }\n\n  capture(resolver, handler) {\n    capture(this, resolver, handler);\n  }\n\n  html(habi) {\n    return this.shadow.appendChild(\n      toElement(habi)\n    );\n  }\n\n  style(styles) {\n    return this.shadow.appendChild(\n      style(styles)\n    );\n  }\n}"],"names":["ALON_EVENT","signalDown","element","payload","event","CustomEvent","detail","__alonSignalDown__","bubbles","cancelable","composed","leafElements","walkThrough","children","childNodes","length","HTMLElement","push","forEach","child","findLeafElements","leafElement","dispatchEvent","_genericEventHandler","e","handlerMap","stopPropagation","resolver","handlers","entries","result","undefined","handler","module","exports","getDefaultExportFromCjs","x","__esModule","Object","prototype","hasOwnProperty","call","style","stylesObject","isEmpty","compileStyles","processStyles","NO_SELECTOR","parentSelector","cssObject","nestedSelector","Array","isArray","property","value","cssProperty","camelToKebabCase","targetObject","key","keys","startsWith","combinedKey","combineSelectors","parent","parentSelectors","splitAndTrim","childSelectors","map","p","c","join","str","replace","toLowerCase","split","s","trim","obj","tanaw","factory","tanawStyle","require$$0","classRegex","idRegex","cssStringToObject","cssString","styleObject","match","charAt","toUpperCase","habiToHtml","habi","document","createTextNode","Node","first","rest","tag","attrs","Error","classMatch","idMatch","class","substring","id","assign","shift","createElement","attr","addEventListener","setAttribute","appendChild","makeElement","flatMap","src","htmlToHabi","DOMParser","parseFromString","body","firstChild","nodeType","TEXT_NODE","textContent","tagName","className","attributes","name","toElement","tanawJS","this","AlonElement","static","Map","components","fromEntries","_components","selectorToHabi","selector","toHabi","$","constructor","super","shadow","attachShadow","mode","register","webComponent","toKebabCase","set","customElements","define","isAlon","intercept","targetElement","eventType","callback","host","preventDefault","signalUp","__alonSignalUp__","bubbling","alonBubblingHandlers","get","capture","alonCaptureHandlers","html","styles"],"mappings":"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"}